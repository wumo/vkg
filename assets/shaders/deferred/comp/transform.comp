#version 450
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_scalar_block_layout : enable
// #extension GL_EXT_debug_printf : enable

#include "../deferred_common.h"
layout(constant_id = 0) const uint lx = 1;
layout(constant_id = 1) const uint ly = 1;
layout(constant_id = 2) const uint lz = 1;
layout(local_size_x_id = 0, local_size_y_id = 1, local_size_z_id = 2) in;

layout(push_constant) uniform TotalMeshInstances { uint total; };
layout(set = 0, binding = 0, scalar) buffer MeshesBuffer {
  MeshInstanceUBO meshInstances[];
};
layout(set = 0, binding = 1, scalar) buffer TransformBuffer { Transform transforms[]; };
layout(set = 0, binding = 2, std430) buffer TransformMatrixBuffer { mat4 matrices[]; };

void main() {
  ivec3 coord = ivec3(gl_GlobalInvocationID.xyz);
  uint dx = gl_WorkGroupSize.y * gl_WorkGroupSize.z * ly * lz;
  uint dy = gl_WorkGroupSize.z * lz;
  uint dz = 1;
  uint id = coord.x * dx + coord.y * dy + coord.z * dz;

  if(id >= total) return;

  MeshInstanceUBO mesh = meshInstances[id];
  mat4 t = toMatrix(transforms[mesh.instance]) * toMatrix(transforms[mesh.node]);
  matrices[id] = t;
}